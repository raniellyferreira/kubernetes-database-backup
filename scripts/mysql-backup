#!/bin/bash
set -e

readonly BACKUP_PATH="/backup/auto"
readonly TEMP_DIR="/backup/tmp"
readonly TIMESTAMP=$(date +%F-%H%M)
readonly TAR_FILE="mysql-${TIMESTAMP}.tar.gz"

do_log() {
    echo $(date +"[ %d/%m/%Y - %H:%M:%S ] #")" $@"
}

notify_dev() {
    # Adicione aqui uma forma de notificação quando o backup for concluido ou tiver erro
    if [ -n "$NTFY_ENDPOINT" ] && [ -n "$NTFY_TOKEN" ]; then
        curl --fail --silent --request POST $NTFY_ENDPOINT \
            --header "x-api-key: ${NTFY_TOKEN}" \
            --header 'Content-Type: application/json' \
            --data-raw "{\"subject\": \"${1}\",\"message\": \"${2}\",\"topic\":\"mail\"}"
    fi
}

do_log "Starting backup MySQL..."

# Create a backup dir
mkdir -p $TEMP_DIR
mkdir -p $BACKUP_PATH
cd $BACKUP_PATH

# Erase backup dir before backup start
do_log "Cleanup old backup $BACKUP_PATH"
rm -vrf "$BACKUP_PATH/*"

# mysqldump para exportar a database
mysql --host=$MYSQL_HOST --user=$MYSQL_ROOT_USERNAME --password="${MYSQL_ROOT_PASSWORD}" -N -e "SHOW databases" | \
    while read dbname; do \
        if [[ ! " ${MYSQL_IGNORE_DATABASES[*]} " =~ " ${dbname} " ]]; then \
            do_log "Dumping database ${dbname} to ${BACKUP_PATH}/${dbname}.sql..."; \
            mysqldump --verbose -B --events --routines --host=$MYSQL_HOST --user=$MYSQL_ROOT_USERNAME --password="${MYSQL_ROOT_PASSWORD}" $dbname > $BACKUP_PATH/$dbname.sql; \
        fi; \
    done

if [[ $? != 0 ]]; then
    do_log "ERROR backup"
    do_log "Dumping of mysql database failed"
    do_log "Cleanup old backup $BACKUP_PATH"

    notify_dev "Warning MySQL Backup $TIMESTAMP" "MySQL Backup: ERROR on export data"
    rm -rf "$BACKUP_PATH/*"
    exit 1
fi

do_log "Compressing backup..."
if [[ $FAST_COMPRESSION == 1 ]]; then 
    tar -vczf $TEMP_DIR/${TAR_FILE} -C ${BACKUP_PATH} ${BACKUP_PATH}/*.sql
else
    tar -vcjf $TEMP_DIR/${TAR_FILE} -C ${BACKUP_PATH} ${BACKUP_PATH}/*.sql
fi

readonly TAR_SIZE=$(du -hs $TEMP_DIR/$TAR_FILE | awk '{print $1}')

du -hs $BACKUP_PATH
du -hs $TEMP_DIR/$TAR_FILE

do_log "Cleanup backup path $BACKUP_PATH"
rm -vrf "$BACKUP_PATH/*"

# Upload to S3
do_log "Upload file on s3 s3://$S3_BUCKET_BACKUP/$S3_MYSQL_BUCKET_PATH/$TAR_FILE"
aws s3 cp $TEMP_DIR/$TAR_FILE  s3://$S3_BUCKET_BACKUP/$S3_MYSQL_BUCKET_PATH/$TAR_FILE

UPLOAD_STATUS=$?

do_log "Remove tar file"
rm -f $TEMP_DIR/$TAR_FILE

readonly FINISH_DATE=$(date +%F-%H%M)

if [[ $UPLOAD_STATUS != 0 ]]; then
    do_log "ERROR Upload tar $TEMP_DIR/$TAR_FILE on s3 fail"
    notify_dev "Warning MySQL Backup $FINISH_DATE" "MySQL Backup: ERROR Upload tar $TEMP_DIR/$TAR_FILE to S3"
fi

if [[ $MYSQL_ROTATE_ARGS ]]; then
    do_log "Rotating backups..."
    rotate s3://$S3_BUCKET_BACKUP/$S3_MYSQL_BUCKET_PATH $MYSQL_ROTATE_ARGS
fi

do_log "MySQL Backup finished successfully with $TAR_SIZE"
if [[ $REPORT_SUCCESSFULLY == 1 ]]; then
    notify_dev "MySQL Backup $FINISH_DATE" "MySQL Backup finished successfully with $TAR_SIZE s3://$S3_BUCKET_BACKUP/$S3_MYSQL_BUCKET_PATH/$TAR_FILE"
fi

exit 0
