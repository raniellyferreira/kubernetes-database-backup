#!/bin/bash
set -e

readonly BACKUP_PATH="/backup/auto"
readonly TEMP_DIR="/backup/tmp"
readonly TIMESTAMP=$(date +%F-%H%M)
readonly TAR_FILE="mongodb-${TIMESTAMP}.tar.gz"

do_log() {
    echo $(date +"[ %d/%m/%Y - %H:%M:%S ] #")" $@"
}

notify_dev() {
    # Adicione aqui uma forma de notificação quando o backup for concluido ou tiver erro
    if [ -n "$NTFY_ENDPOINT" ] && [ -n "$NTFY_TOKEN" ]; then
        curl --fail --silent --request POST $NTFY_ENDPOINT \
            --header "x-api-key: ${NTFY_TOKEN}" \
            --header 'Content-Type: application/json' \
            --data-raw "{\"subject\": \"${1}\",\"message\": \"${2}\",\"topic\":\"mail\"}"
    fi
}

do_log "Starting backup mongodb..."

# Create a backup dir
mkdir -p $TEMP_DIR
mkdir -p $BACKUP_PATH
cd $BACKUP_PATH

# Mongodump para exportar a database
if [[ $MONGODB_URI ]]; then
    mongodump --uri="$MONGODB_URI" --out=$BACKUP_PATH
else
    mongodump --host=$MONGODB_HOST --port=$MONGODB_PORT --username=$MONGODB_USERNAME --password=$MONGODB_PASSWORD --authenticationDatabase=$MONGODB_AUTH_DB --out=$BACKUP_PATH
fi

if [[ $? != 0 ]]; then
    do_log "ERROR backup"
    do_log "Dumping of mongo database failed"
    do_log "Cleanup old backup $BACKUP_PATH"

    notify_dev "Warning MongoDB Backup $TIMESTAMP" "MongoDB Backup: ERROR on export data"
    rm -rf "$BACKUP_PATH/*"
    exit 1
fi

do_log "Compressing backup..."
tar -cjf $TEMP_DIR/${TAR_FILE} -C ${BACKUP_PATH} ${BACKUP_PATH}

readonly TAR_SIZE=$(du -hs $TEMP_DIR/$TAR_FILE | awk '{print $1}')

du -hs $BACKUP_PATH
du -hs $TEMP_DIR/$TAR_FILE

do_log "Cleanup old backup /backup/auto"
rm -rf "$BACKUP_PATH/*"

# Upload to S3
do_log "Upload file on s3 s3://$S3_BUCKET_BACKUP/$S3_MONGODB_BUCKET_PATH/$TAR_FILE"
aws s3 cp $TEMP_DIR/$TAR_FILE  s3://$S3_BUCKET_BACKUP/$S3_MONGODB_BUCKET_PATH/$TAR_FILE

UPLOAD_STATUS=$?

do_log "Remove tar file"
rm -f $TEMP_DIR/$TAR_FILE

readonly FINISH_DATE=$(date +%F-%H%M)

if [[ $UPLOAD_STATUS != 0 ]]; then
    do_log "ERROR Upload tar $TEMP_DIR/$TAR_FILE on s3 fail"
    notify_dev "Warning MongoDB Backup $FINISH_DATE" "MongoDB Backup: ERROR Upload tar $TEMP_DIR/$TAR_FILE to S3"
    exit 1  
fi

if [[ $MONGODB_ROTATE_ARGS ]]; then
    do_log "Rotating backups..."
    rotate-backups-s3 $MONGODB_ROTATE_ARGS --include="$S3_MONGODB_BUCKET_PATH/*" --verbose $S3_BUCKET_BACKUP
fi

do_log "MongoDB Backup finished successfully with $TAR_SIZE"

if [[ $REPORT_SUCCESSFULLY == 1 ]]; then
    notify_dev "MongoDB Backup $FINISH_DATE" "MongoDB Backup finished successfully with $TAR_SIZE s3://$S3_BUCKET_BACKUP/$S3_MONGODB_BUCKET_PATH/$TAR_FILE"
fi

exit 0
